# Задача: Проверка корректности хэшей в модельном блокчейне
# Описание: Программа проверяет последовательность из N блоков на соответствие правилам вычисления хэша. Каждый блок содержит закодированные данные (m, r, h). Хэш должен быть меньше 100 и вычисляться по заданной формуле.
# Ввод: Сначала число N — количество блоков. Затем N чисел, каждое представляет один блок.
# Вывод: Номер первого блока с некорректным хэшем или -1, если все хэши правильные.

n = int(input())  # Считываем количество блоков

prev = 0  # Начальное значение хэша предыдущего блока (для первого блока — 0)

for index in range(n):
    b = int(input())  # Считываем один блок
    
    # Распаковываем блок: извлекаем h, r, m
    h = b % 256
    r = (b // 256) % 256
    m = b // (256 * 256)

    # Вычисляем ожидаемый (правильный) хэш по формуле
    expected_h = (37 * (m + r + prev)) % 256

    # Проверяем два условия: хэш должен быть меньше 100 и совпадать с ожидаемым
    if h >= 100 or h != expected_h:
        print(index)  # Нарушение — выводим номер плохого блока
        break  # И выходим из программы
    else:
        prev = h  # Всё хорошо — запоминаем текущий хэш как предыдущий для следующего блока
else:
    # Если цикл завершился и не было break — значит все блоки правильные
    print(-1)
